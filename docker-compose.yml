version: "3.7"

services:
  # =================== OpenMRS Instance =====================
  gateway:
    image: openmrs/openmrs-reference-application-3-gateway:${TAG:-qa}
    restart: "unless-stopped"
    container_name: openmrs-gateway
    build:
      context: ./openmrs-appglobal-refapp/gateway
    depends_on:
      - frontend
      - backend
    ports:
      - "8089:80"
    healthcheck:
      test: exit 0
    networks:
      - hie

  frontend:
    image: openmrs/openmrs-reference-application-3-frontend:${TAG:-qa}
    container_name: openmrs-frontend
    build:
      context: ./openmrs-appglobal-refapp/frontend
    restart: "unless-stopped"
    environment:
      SPA_PATH: /openmrs/spa
      API_URL: /openmrs
      SPA_CONFIG_URLS: /openmrs/spa/config-core_demo.json
      SPA_DEFAULT_LOCALE:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      timeout: 5s
    depends_on:
      - backend
    networks:
      - hie

  backend:
    image: openmrs/openmrs-reference-application-3-backend:${TAG:-qa}
    container_name: openmrs-backend
    build:
      context: ./openmrs-appglobal-refapp
    restart: "unless-stopped"
    depends_on:
      - db
    environment:
      OMRS_CONFIG_MODULE_WEB_ADMIN: "true"
      OMRS_CONFIG_AUTO_UPDATE_DATABASE: "true"
      OMRS_CONFIG_CREATE_TABLES: "true"
      OMRS_CONFIG_CONNECTION_SERVER: db
      OMRS_CONFIG_CONNECTION_DATABASE: openmrs
      OMRS_CONFIG_CONNECTION_USERNAME: ${OMRS_DB_USER:-openmrs}
      OMRS_CONFIG_CONNECTION_PASSWORD: ${OMRS_DB_PASSWORD:-openmrs}
      CLIENTREGISTRY_SERVERURL: ${CLIENTREGISTRY_SERVERURL}
      CLIENTREGISTRY_USERNAME: ${CLIENTREGISTRY_USERNAME}
      CLIENTREGISTRY_PASSWORD: ${CLIENTREGISTRY_PASSWORD}
      CLIENTREGISTRY_IDENTIFIERROOT: ${CLIENTREGISTRY_IDENTIFIERROOT}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/openmrs"]
      timeout: 5s
    volumes:
      - openmrs-data:/openmrs/data
    networks:
      - hie

  db:
    image: mariadb:10.11.7
    container_name: openmrs-db
    restart: "unless-stopped"
    command: "mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci"
    healthcheck:
      test: 'mysql --user=${OMRS_DB_USER:-openmrs} --password=${OMRS_DB_PASSWORD:-openmrs} --execute "SHOW DATABASES;"'
      interval: 3s
      timeout: 1s
      retries: 5
    environment:
      MYSQL_DATABASE: openmrs
      MYSQL_USER: ${OMRS_DB_USER:-openmrs}
      MYSQL_PASSWORD: ${OMRS_DB_PASSWORD:-openmrs}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-openmrs}
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - hie

  # =================== OpenHIM Instance =====================
  mongo:
    container_name: openhim-mongo
    ports:
      - "27018:27017"
    image: mongo:3.4
    networks:
      - hie

  openhim-core:
    container_name: openhim-core
    image: jembi/openhim-core:v7.1.0
    restart: unless-stopped
    environment:
      - mongo_url=mongodb://mongo/openhim
      - mongo_atnaUrl=mongodb://mongo/openhim
    healthcheck:
      test: "node /healthcheck.js"
      interval: 20s
      timeout: 20s
      retries: 2
    volumes:
      - ./configs/openhim/healthcheck.js:/healthcheck.js
    depends_on:
      - mongo
    ports:
      - "8085:8080"
      - "5007:5000"
      - "5001:5001"
      - "5050:5050"
      - "5051:5051"
      - "5052:5052"
      - "7788:7788"
    networks:
      - hie

  openhim-console:
    container_name: openhim-console
    image: jembi/openhim-console:v1.15.0
    volumes:
      - ./configs/openhim-console/default-local.json:/usr/share/nginx/html/config/default.json
    healthcheck:
      test: "curl -sS http://openhim-console || exit 1"
      interval: 10s
      timeout: 60s
      retries: 3
    ports:
      - "9000:80"
    networks:
      - hie

  openhim-config:
    container_name: openhim-config
    image: ghcr.io/digi-uw/openhim-config:latest
    volumes:
      - ./configs/openhim/test-openhim-config.json:/app/test-openhim-config.json
    networks:
      - hie

# ===================== OpenCR Instance ======================
  opencr:
    container_name: open-clientregistry
    hostname: opencr
    image: intrahealth/opencr:latest
    restart: unless-stopped
    environment:
      - NODE_ENV=docker
      - HAPI_FHIR_URL=http://opencr-fhir:8080/fhir/metadata
    volumes:
      - ./configs/opencr/config.json:/src/server/config/config_docker.json
      - ./configs/opencr/mediator.json:/src/server/config/mediator.json
      - ./configs/opencr/decisionRules.json:/src/server/config/decisionRules.json
      - ./configs/opencr/PatientRelationship.json:/src/resources/Relationships/PatientRelationship.json
    depends_on:
      - opencr-fhir
    networks:
      - hie
    ports:
      - 3000:3000

  opencr-fhir:
    image: hapiproject/hapi:v5.5.1
    container_name: opencr-fhir
    hostname: opencr-fhir
    restart: unless-stopped
    healthcheck:
      test: "curl -sS http://opencr-fhir:8080/fhir/metadata || exit 1"
      interval: 90s
      timeout: 30s
      retries: 3
    volumes:
      - /data/hapi
    ports:
      - 8087:8080
    networks:
      - hie
  opencr-elasticsearch:
    container_name: es
    hostname: es
    image: intrahealth/elasticsearch:latest
    restart: unless-stopped
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - /usr/share/elasticsearch/data
      - ./esplugin/string-similarity:/usr/share/elasticsearch/plugins/string-similarity-scoring
    healthcheck:
      test: "curl --silent --fail http://es:9200/_cluster/health || exit 1"
    networks:
      - hie

volumes:
  openmrs-data: ~
  db-data: ~

networks:
  hie:
